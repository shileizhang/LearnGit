版本库又名仓库,英文名repository
你可以简单理解成一个目录，
这个目录里面的所有文件都可以被Git管理起来，
每个文件的修改、删除，Git都能跟踪，
以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。

所有的版本控制系统，其实只能跟踪文本文件的改动，
比如TXT文件，网页，所有的程序代码等等

untracked file(新文件没有被add过)
changes not stages for commit（跟踪文件，被修改后没有被add）
changes to be commited(被add到了暂存区没有被commit)

为什么Git比其他版本控制系统设计得优秀，因为Git跟踪并管理的是修改，而非文件。 
区分：
工作区；暂存区；当前分支；版本库
（文件的增，删，改）

分支策略
在实际开发中，我们应该按照几个基本原则进行分支管理：
首先，master分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；
那在哪干活呢？干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本；
你和你的小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并就可以了

在GitHub上，可以任意Fork开源仓库；
自己拥有Fork后的仓库的读写权限；
可以推送pull request给官方仓库来贡献代码